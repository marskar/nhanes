set.seed(10)
sample(seq(10),1)
set.seed(10)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(0)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
sample(seq(10),1)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(-1)
rnorm(5)
set.seed(00)
rnorm(5)
set.seed(00)
rnorm(5)
set.seed(00)
rnorm(5)
set.seed(00)
rnorm(5)
set.seed(0)
rnorm(5)
set.seed(01)
rnorm(5)
set.seed(01)
rnorm(5)
set.seed(01)
rnorm(5)
set.seed(01)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed("1")
set.seed("1")
rnorm(5)
set.seed("1")
rnorm(5)
set.seed("1")
rnorm(5)
set.seed("1")
rnorm(5)
set.seed("1")
rnorm(5)
set.seed("1")
rnorm(5)
set.seed("01")
rnorm(5)
set.seed("01")
rnorm(5)
set.seed("01")
rnorm(5)
set.seed("01")
rnorm(5)
set.seed("01")
rnorm(5)
set.seed("01")
rnorm(5)
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
library(reticulate)
py$x
py$x
x
install.packages('RVAideMemoire')
install.packages('RVAideMemoire')
install.packages('magick')
install.packages('lime')
library('lime')
anova(cox)
library(lime)
install.packages("magick")
nstall.packages("magick")
install.packages("magick")
install.packages('lime')
install.packages('lime')
library(lime)
library(here)
library(readr)
library(dplyr)
library(tidyr)
library(survey)
source(here("kod/frailty.controldf.R"))
source(here("kod/lasso.R"))
#set.seed(seed = args[1])
#move PERMTH_INT and canc_mort to the beginning
#sample a tenth of the dataset columns
read_rds(here('dat/3-clean-complete-cases.rds')) %>%
select(-SEQN) %>%
select(PERMTH_INT,
canc_mort,
SDPPSU6,
SDPSTRA6,
WTPFQX6,
everything()[sample(seq(ncol(.)),
round(ncol(.)/10))]) ->
samp
# create survey design object
svydesign(ids = ~SDPPSU6,
strata = ~SDPSTRA6,
weights = ~WTPFQX6,
nest = TRUE,
data = samp) ->
des
# create left side of equations
form <- as.formula(Surv(PERMTH_INT, canc_mort) ~ x1)
# create right sides of equations
vrs <- as.name(paste(names(samp)[6:ncol(samp)],
collapse=' + '))
vrs2 <- as.name(paste(names(samp)[6:ncol(samp)],
collapse=', '))
getwd()
read_rds('..gdrive/nhanes/dat/3-clean-complete-cases.rds') %>%
select(-SEQN) %>%
select(PERMTH_INT,
canc_mort,
SDPPSU6,
SDPSTRA6,
WTPFQX6,
everything()[sample(seq(ncol(.)),
round(ncol(.)/10))]) ->
samp
read_rds('../gdrive/nhanes/dat/3-clean-complete-cases.rds') %>%
select(-SEQN) %>%
select(PERMTH_INT,
canc_mort,
SDPPSU6,
SDPSTRA6,
WTPFQX6,
everything()[sample(seq(ncol(.)),
round(ncol(.)/10))]) ->
samp
source("../gdrive/nhanes/kod/frailty.controldf.R")
source("../gdrive/nhanes/kod/lasso.R")
svydesign(ids = ~SDPPSU6,
strata = ~SDPSTRA6,
weights = ~WTPFQX6,
nest = TRUE,
data = samp) ->
des
# create left side of equations
form <- as.formula(Surv(PERMTH_INT, canc_mort) ~ x1)
# create right sides of equations
vrs <- as.name(paste(names(samp)[6:ncol(samp)],
collapse=' + '))
vrs2 <- as.name(paste(names(samp)[6:ncol(samp)],
collapse=', '))
cox <- svycoxph(update(form,
paste("~ ", vrs)),
design = des, data = samp)
rid <- svycoxph(update(form,
paste("~ ridge(", vrs2, ')')),
design = des, data = samp)
las <-  svycoxph(update(form,
paste("~ lasso(", vrs2, ')')),
design = des, data = samp)
summary(cox)
summary(cox) %>% str
summary(cox)$coefficients %>% str
summary(cox)$coefficients %>% glimpse
summary(cox)$coefficients$dimnames
summary(cox)$coefficients["dimnames"]
summary(cox)$coefficients %>% glimpse
summary(cox)$coefficients %>% str
summary(cox)$coefficients %>% str
summary(cox)$coefficients %>% glimpse
summary(cox) %>% str
summary(cox)$logtest
summary(cox)$rsq
summary(cox)$sctest
summary(cox)$waldtest
summary(cox)
print(summary(cox)) %>% str
library(devtools)
devtools::install_github("DavisVaughan/furrr")
plot(cars)
install.packages("reticulate")
#install.packages("reticulate")
library(reticulate)
#install.packages("reticulate")
library(reticulate)
print(py$squared1)
library(readr)
library(here)
library(dplyr)
library(ggplot2)
library(tidyr)
library(purrr)
library(stringr)
library(forcats)
library(tidyr)
#read in datasets created by scripts 4 & 5
dat_quad1 <- read_rds("dat/6-model-diff-sizes.rds")
dat_quad3 <- read_rds("dat/6-model-third-run.rds")
#files <- c("dat/4-model-complete-cases.rds", "dat/5-model-second-run.rds")
#read_rds("dat/4-model-first-run.rds") %>%
#rename(con = concordance) %>%
dat_quad1 <-    dat_quad1 %>%
rename(con=concordance,
n_vars=size,
hr_ci_upper = HR_CI_upper,
hr_ci_lower = HR_CI_lower) %>%
mutate(run = rep(1, nrow(.)),
quad = case_when(con > median(con) &
aic <= median(aic) ~ 1,
con > median(con) &
aic > median(aic) ~ 2,
con <= median(con) &
aic <= median(aic) ~ 3,
con <= median(con) &
aic > median(aic) ~ 4
)
)
#quad = #as.factor(case_when(con > median(con) &
#                    aic <= median(aic) ~ 1,
#                    con > median(con) &
#                    aic > median(aic) ~ 2,
#                    con <= median(con) &
#                    aic <= median(aic) ~ 3,
#                    con <= median(con) &
#                    aic > median(aic) ~ 4
#                  ))
dat_quad3 <-    dat_quad3 %>%
drop_na() %>%
rename(con=concordance) %>%
mutate(type = str_replace(type, "cox", "coxph"),
type = str_replace(type, "rid", "ridge"),
run = rep(3, nrow(.)),
quad = rep(5, nrow(.)))
dat_quad <- bind_rows(dat_quad1, dat_quad3) %>%
mutate(quad = as.factor(quad)) %>%
mutate(quad = fct_recode(quad, "Run 1, Group A" = '1',
"Run 1, Group B" = '2',
"Run 1, Group C" = '3',
"Run 1, Group D" = '4',
"Run 3" = '5'))
library(readr)
library(here)
library(dplyr)
library(ggplot2)
library(tidyr)
library(purrr)
library(stringr)
library(forcats)
library(tidyr)
#read in datasets created by scripts 4 & 5
dat_quad1 <- read_rds(here("dat/6-model-diff-sizes.rds"))
dat_quad3 <- read_rds(here("dat/6-model-third-run.rds"))
#files <- c("dat/4-model-complete-cases.rds", "dat/5-model-second-run.rds")
#read_rds("dat/4-model-first-run.rds") %>%
#rename(con = concordance) %>%
dat_quad1 <-    dat_quad1 %>%
rename(con=concordance,
n_vars=size,
hr_ci_upper = HR_CI_upper,
hr_ci_lower = HR_CI_lower) %>%
mutate(run = rep(1, nrow(.)),
quad = case_when(con > median(con) &
aic <= median(aic) ~ 1,
con > median(con) &
aic > median(aic) ~ 2,
con <= median(con) &
aic <= median(aic) ~ 3,
con <= median(con) &
aic > median(aic) ~ 4
)
)
#quad = #as.factor(case_when(con > median(con) &
#                    aic <= median(aic) ~ 1,
#                    con > median(con) &
#                    aic > median(aic) ~ 2,
#                    con <= median(con) &
#                    aic <= median(aic) ~ 3,
#                    con <= median(con) &
#                    aic > median(aic) ~ 4
#                  ))
dat_quad3 <-    dat_quad3 %>%
drop_na() %>%
rename(con=concordance) %>%
mutate(type = str_replace(type, "cox", "coxph"),
type = str_replace(type, "rid", "ridge"),
run = rep(3, nrow(.)),
quad = rep(5, nrow(.)))
dat_quad <- bind_rows(dat_quad1, dat_quad3) %>%
mutate(quad = as.factor(quad)) %>%
mutate(quad = fct_recode(quad, "Run 1, Group A" = '1',
"Run 1, Group B" = '2',
"Run 1, Group C" = '3',
"Run 1, Group D" = '4',
"Run 3" = '5'))
here()
setwd("~/gdrive/nhanes/")
dat_quad1 <- read_rds(here("dat/6-model-diff-sizes.rds"))
dat_quad3 <- read_rds(here("dat/6-model-third-run.rds"))
#files <- c("dat/4-model-complete-cases.rds", "dat/5-model-second-run.rds")
#read_rds("dat/4-model-first-run.rds") %>%
#rename(con = concordance) %>%
dat_quad1 <-    dat_quad1 %>%
rename(con=concordance,
n_vars=size,
hr_ci_upper = HR_CI_upper,
hr_ci_lower = HR_CI_lower) %>%
mutate(run = rep(1, nrow(.)),
quad = case_when(con > median(con) &
aic <= median(aic) ~ 1,
con > median(con) &
aic > median(aic) ~ 2,
con <= median(con) &
aic <= median(aic) ~ 3,
con <= median(con) &
aic > median(aic) ~ 4
)
)
#quad = #as.factor(case_when(con > median(con) &
#                    aic <= median(aic) ~ 1,
#                    con > median(con) &
#                    aic > median(aic) ~ 2,
#                    con <= median(con) &
#                    aic <= median(aic) ~ 3,
#                    con <= median(con) &
#                    aic > median(aic) ~ 4
#                  ))
dat_quad3 <-    dat_quad3 %>%
drop_na() %>%
rename(con=concordance) %>%
mutate(type = str_replace(type, "cox", "coxph"),
type = str_replace(type, "rid", "ridge"),
run = rep(3, nrow(.)),
quad = rep(5, nrow(.)))
dat_quad <- bind_rows(dat_quad1, dat_quad3) %>%
mutate(quad = as.factor(quad)) %>%
mutate(quad = fct_recode(quad, "Run 1, Group A" = '1',
"Run 1, Group B" = '2',
"Run 1, Group C" = '3',
"Run 1, Group D" = '4',
"Run 3" = '5'))
#dat_quad <- dat_quad %>%
#    mutate(quadrun = interaction(quad, run))
glimpse(dat_quad)
# Figure 1
dat_quad %>%
ggplot(aes(x = aic,
y = con,
size = n_vars,
colour = quad)) +
geom_point(aes(shape = factor(type)),
#size = 3,
stroke = 1) +
scale_shape(solid = FALSE) +
theme_minimal() +
labs(
x = 'Akaike Information Criterion',
y = 'Concordance',
size = "Model Size",
shape = "Model Type",
colour = "Color Labels") +
geom_hline(yintercept = 83.5)
dat_quad1 <- read_rds("dat/6-model-diff-sizes.rds")
dat_quad3 <- read_rds("dat/6-model-third-run.rds")
#files <- c("dat/4-model-complete-cases.rds", "dat/5-model-second-run.rds")
#read_rds("dat/4-model-first-run.rds") %>%
#rename(con = concordance) %>%
dat_quad1 <-    dat_quad1 %>%
rename(con=concordance,
n_vars=size,
hr_ci_upper = HR_CI_upper,
hr_ci_lower = HR_CI_lower) %>%
mutate(run = rep(1, nrow(.)),
quad = case_when(con > median(con) &
aic <= median(aic) ~ 1,
con > median(con) &
aic > median(aic) ~ 2,
con <= median(con) &
aic <= median(aic) ~ 3,
con <= median(con) &
aic > median(aic) ~ 4
)
)
#quad = #as.factor(case_when(con > median(con) &
#                    aic <= median(aic) ~ 1,
#                    con > median(con) &
#                    aic > median(aic) ~ 2,
#                    con <= median(con) &
#                    aic <= median(aic) ~ 3,
#                    con <= median(con) &
#                    aic > median(aic) ~ 4
#                  ))
dat_quad3 <-    dat_quad3 %>%
drop_na() %>%
rename(con=concordance) %>%
mutate(type = str_replace(type, "cox", "coxph"),
type = str_replace(type, "rid", "ridge"),
run = rep(3, nrow(.)),
quad = rep(5, nrow(.)))
dat_quad <- bind_rows(dat_quad1, dat_quad3) %>%
mutate(quad = as.factor(quad)) %>%
mutate(quad = fct_recode(quad, "Run 1, Group A" = '1',
"Run 1, Group B" = '2',
"Run 1, Group C" = '3',
"Run 1, Group D" = '4',
"Run 3" = '5'))
#dat_quad <- dat_quad %>%
#    mutate(quadrun = interaction(quad, run))
glimpse(dat_quad)
# Figure 1
dat_quad %>%
ggplot(aes(x = aic,
y = con,
size = n_vars,
colour = quad)) +
geom_point(aes(shape = factor(type)),
#size = 3,
stroke = 1) +
scale_shape(solid = FALSE) +
theme_minimal() +
labs(
x = 'Akaike Information Criterion',
y = 'Concordance',
size = "Model Size",
shape = "Model Type",
colour = "Color Labels") +
geom_hline(yintercept = 83.5)
#remove ridge from variable name
#define function to flatten dat_quad
names <- names(flatten(dat_quad))
names
View(dat_quad)
citation("devtools")
citation("survey")
options(citation.bibtex.max=999)
citation("survey")
install.packages("survival")
citation("survey")
new <- dat_quad$hazard_ratio
View(new)
str(dat_quad)
str(dat_quad)
str(dat_quad$hazard_ratio)
